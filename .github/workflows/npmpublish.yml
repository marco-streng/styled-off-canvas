name: Node.js Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          pnpm i
          pnpm --filter "styled-off-canvas" run lint
          pnpm --filter "styled-off-canvas" run test
          pnpm --filter "styled-off-canvas" run build

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: publish prerelease
        if: "github.event.release.prerelease"
        run: |
          pnpm i
          pnpm --filter "styled-off-canvas" run lint
          pnpm --filter "styled-off-canvas" run test
          pnpm --filter "styled-off-canvas" run build
          cd lib
          npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: publish release
        if: "!github.event.release.prerelease"
        run: |
          pnpm i
          pnpm --filter "styled-off-canvas" run lint
          pnpm --filter "styled-off-canvas" run test
          pnpm --filter "styled-off-canvas" run build
          cd lib
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
